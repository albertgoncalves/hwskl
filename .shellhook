#!/usr/bin/env bash

if [ "$(uname -s)" = "Darwin" ]; then
    alias ls="ls --color=auto"
    alias ll="ls -al"
else
    alias open="xdg-open"
fi

export WD=$PWD

for x in bin build out; do
    if [ ! -d "$WD/$x" ]; then
        mkdir "$WD/$x"
    fi
done

hsall () {
    find "$WD/src" -type f -name '*.hs' | parallel --will-cite '
        echo {}
        hlint {}
        ormolu -m inplace {}
        echo ""
    '
}

lint () {
    hlint "$1"
    ormolu -m inplace "$1"
}

export FLAGS=(
    -dynamic
    "-fdiagnostics-color=always"
    -funbox-strict-fields
    "-optl -fuse-ld=lld"
    "-outputdir $WD/build"
    -Wall
    -Wcompat
    -Werror
    -Widentities
    -Wincomplete-record-updates
    -Wincomplete-uni-patterns
    -Wmissing-export-lists
    -Wmonomorphism-restriction
    -Wno-unused-top-binds
    -Wpartial-fields
    -Wunused-packages
    -Wunused-type-patterns
)

runh () {
    handle=$(echo "$1" | sed 's/^[a-z\/]*\/\(.*\)\.[a-z]*$/\1/')
    pwd_=$PWD
    (
        if [ "$(ls -A "$WD/build")" ]; then
            rm "$WD/build"/*
        fi
        cd "$WD/src" || return
        ghc "${FLAGS[@]}" -o "$WD/bin/$handle" "$handle.hs" || return
        cd "$pwd_" || return
        "$WD/bin/$handle"
    )
}

checkh () {
    handle=$(echo "$1" | sed 's/^[a-z\/]*\/\(.*\)\.[a-z]*$/\1/')
    (
        cd "$WD/src" || return
        ghc "${FLAGS[@]}" -fno-code "$handle.hs" || return
    )
}

export -f checkh
export -f hsall
export -f lint
export -f runh
alias ormolu="ormolu -m inplace"
